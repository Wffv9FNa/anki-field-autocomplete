# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'designer/settings_dialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os
from aqt.qt import *


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(496, 324)
        Dialog.setWindowTitle("Field Autocomplete Settings")
        self.gridLayout_6 = QGridLayout(Dialog)
        self.gridLayout_6.setObjectName("gridLayout_6")

        # Get the resources directory path
        addon_dir = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
        resources_dir = os.path.join(os.path.dirname(addon_dir), "resources")

        # Facebook button
        self.toolButton_facebook = QToolButton(Dialog)
        self.toolButton_facebook.setMaximumSize(QSize(31, 31))
        self.toolButton_facebook.setText("...")
        icon = QIcon()
        icon.addPixmap(QPixmap(os.path.join(resources_dir, "Facebook.png")), QIcon.Mode.Normal, QIcon.State.Off)
        self.toolButton_facebook.setIcon(icon)
        self.toolButton_facebook.setIconSize(QSize(31, 31))
        self.toolButton_facebook.setObjectName("toolButton_facebook")
        self.gridLayout_6.addWidget(self.toolButton_facebook, 0, 6, 1, 1)

        # YouTube button
        self.toolButton_youtube = QToolButton(Dialog)
        self.toolButton_youtube.setMaximumSize(QSize(31, 31))
        self.toolButton_youtube.setText("...")
        icon1 = QIcon()
        icon1.addPixmap(QPixmap(os.path.join(resources_dir, "YouTube.png")), QIcon.Mode.Normal, QIcon.State.Off)
        self.toolButton_youtube.setIcon(icon1)
        self.toolButton_youtube.setIconSize(QSize(31, 31))
        self.toolButton_youtube.setObjectName("toolButton_youtube")
        self.gridLayout_6.addWidget(self.toolButton_youtube, 0, 2, 1, 1)

        # Restore button
        self.RestoreButton = QPushButton(Dialog)
        self.RestoreButton.setText("Restore Default")
        self.RestoreButton.setObjectName("RestoreButton")
        self.gridLayout_6.addWidget(self.RestoreButton, 7, 4, 1, 3)

        # Instagram button
        self.toolButton_instagram = QToolButton(Dialog)
        self.toolButton_instagram.setMaximumSize(QSize(31, 31))
        self.toolButton_instagram.setText("...")
        icon2 = QIcon()
        icon2.addPixmap(QPixmap(os.path.join(resources_dir, "Instagram.png")), QIcon.Mode.Normal, QIcon.State.Off)
        self.toolButton_instagram.setIcon(icon2)
        self.toolButton_instagram.setIconSize(QSize(31, 31))
        self.toolButton_instagram.setObjectName("toolButton_instagram")
        self.gridLayout_6.addWidget(self.toolButton_instagram, 0, 5, 1, 1)

        # Website button
        self.toolButton_website = QToolButton(Dialog)
        self.toolButton_website.setMaximumSize(QSize(31, 31))
        self.toolButton_website.setText("...")
        icon3 = QIcon()
        icon3.addPixmap(QPixmap(os.path.join(resources_dir, "AnKingSmall.png")), QIcon.Mode.Normal, QIcon.State.Off)
        self.toolButton_website.setIcon(icon3)
        self.toolButton_website.setIconSize(QSize(31, 31))
        self.toolButton_website.setObjectName("toolButton_website")
        self.gridLayout_6.addWidget(self.toolButton_website, 0, 1, 1, 1)

        # Patreon button
        self.toolButton_patreon = QToolButton(Dialog)
        self.toolButton_patreon.setMaximumSize(QSize(171, 26))
        self.toolButton_patreon.setText("...")
        icon4 = QIcon()
        icon4.addPixmap(QPixmap(os.path.join(resources_dir, "Patreon.png")), QIcon.Mode.Normal, QIcon.State.Off)
        self.toolButton_patreon.setIcon(icon4)
        self.toolButton_patreon.setIconSize(QSize(200, 31))
        self.toolButton_patreon.setObjectName("toolButton_patreon")
        self.gridLayout_6.addWidget(self.toolButton_patreon, 0, 3, 1, 2)

        # OK button
        self.OkButton = QPushButton(Dialog)
        self.OkButton.setText("OK")
        self.OkButton.setObjectName("OkButton")
        self.gridLayout_6.addWidget(self.OkButton, 7, 7, 1, 1)

        # Vertical layout
        self.verticalLayout = QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem = QSpacerItem(20, 8, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Maximum)
        self.verticalLayout.addItem(spacerItem)

        # Checkbox for search mode
        self.checkBox_search_mode = QCheckBox(Dialog)
        self.checkBox_search_mode.setText("Loose search (Strict search when unchecked)")
        self.checkBox_search_mode.setObjectName("checkBox_search_mode")
        self.verticalLayout.addWidget(self.checkBox_search_mode)

        # Group box
        self.groupBox_2 = QGroupBox(Dialog)
        self.groupBox_2.setEnabled(True)
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_2.sizePolicy().hasHeightForWidth())
        self.groupBox_2.setSizePolicy(sizePolicy)
        self.groupBox_2.setTitle("")
        self.groupBox_2.setObjectName("groupBox_2")

        # Label for shortcut
        self.label = QLabel(self.groupBox_2)
        self.label.setGeometry(QRect(10, 10, 438, 31))
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setText("Toggle autocomplete shortcut")
        self.label.setObjectName("label")

        # Line edit for shortcut
        self.toggle_ac_shortcut_lineedit = QLineEdit(self.groupBox_2)
        self.toggle_ac_shortcut_lineedit.setGeometry(QRect(12, 40, 231, 26))
        self.toggle_ac_shortcut_lineedit.setObjectName("toggle_ac_shortcut_lineedit")
        self.verticalLayout.addWidget(self.groupBox_2)

        # Horizontal layout for course info
        self.horizontalLayout = QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")

        # Course button
        self.toolButton_course = QToolButton(Dialog)
        self.toolButton_course.setText("...")
        icon5 = QIcon()
        icon5.addPixmap(QPixmap(os.path.join(resources_dir, "AnKingSmall.png")), QIcon.Mode.Normal, QIcon.State.Off)
        self.toolButton_course.setIcon(icon5)
        self.toolButton_course.setIconSize(QSize(40, 40))
        self.toolButton_course.setObjectName("toolButton_course")
        self.horizontalLayout.addWidget(self.toolButton_course)

        # Course description
        self.label_2 = QLabel(Dialog)
        self.label_2.setText("Interested in learning how to use Anki effectively? Check out the Anki Mastery Course, a comprehensive series of lessons and video tutorials on Anki designed by the AnKing team.\n")
        self.label_2.setWordWrap(True)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout.addWidget(self.label_2)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.gridLayout_6.addLayout(self.verticalLayout, 3, 0, 2, 8)

        # Raise widgets
        self.RestoreButton.raise_()
        self.toolButton_patreon.raise_()
        self.toolButton_facebook.raise_()
        self.toolButton_instagram.raise_()
        self.toolButton_website.raise_()
        self.toolButton_youtube.raise_()
        self.OkButton.raise_()